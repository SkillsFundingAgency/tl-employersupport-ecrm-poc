{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apis_twitter_api_v2_path": {
            "type": "SecureString"
        },
        "operations_hideReplyById_type": {
            "type": "SecureString"
        },
        "operations_tweetCountsFullArchiveSearch_type": {
            "type": "SecureString"
        },
        "operations_tweetCountsFullArchiveSearch_type_1": {
            "type": "SecureString"
        },
        "operations_tweetCountsFullArchiveSearch_type_2": {
            "type": "SecureString"
        },
        "operations_tweetCountsRecentSearch_type": {
            "type": "SecureString"
        },
        "operations_tweetCountsRecentSearch_type_1": {
            "type": "SecureString"
        },
        "operations_tweetsFullarchiveSearch_type": {
            "type": "SecureString"
        },
        "operations_tweetsFullarchiveSearch_type_1": {
            "type": "SecureString"
        },
        "operations_tweetsIdLikingUsers_type": {
            "type": "SecureString"
        },
        "operations_tweetsIdRetweetingUsers_type": {
            "type": "SecureString"
        },
        "operations_tweetsRecentSearch_type": {
            "type": "SecureString"
        },
        "operations_tweetsRecentSearch_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdBlock_type": {
            "type": "SecureString"
        },
        "operations_usersIdBlocking_type": {
            "type": "SecureString"
        },
        "operations_usersIdFollow_type": {
            "type": "SecureString"
        },
        "operations_usersIdFollowers_type": {
            "type": "SecureString"
        },
        "operations_usersIdFollowing_type": {
            "type": "SecureString"
        },
        "operations_usersIdLike_type": {
            "type": "SecureString"
        },
        "operations_usersIdLikedTweets_type": {
            "type": "SecureString"
        },
        "operations_usersIdMentions_type": {
            "type": "SecureString"
        },
        "operations_usersIdMentions_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdMentions_type_2": {
            "type": "SecureString"
        },
        "operations_usersIdMute_type": {
            "type": "SecureString"
        },
        "operations_usersIdRetweets_type": {
            "type": "SecureString"
        },
        "operations_usersIdTweets_type": {
            "type": "SecureString"
        },
        "operations_usersIdTweets_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdTweets_type_2": {
            "type": "SecureString"
        },
        "operations_usersIdUnblock_type": {
            "type": "SecureString"
        },
        "operations_usersIdUnblock_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdUnfollow_type": {
            "type": "SecureString"
        },
        "operations_usersIdUnfollow_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdUnlike_type": {
            "type": "SecureString"
        },
        "operations_usersIdUnlike_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdUnmute_type": {
            "type": "SecureString"
        },
        "operations_usersIdUnmute_type_1": {
            "type": "SecureString"
        },
        "operations_usersIdUnretweets_type": {
            "type": "SecureString"
        },
        "operations_usersIdUnretweets_type_1": {
            "type": "SecureString"
        },
        "subscriptions_6140846ca5996c0075070001_displayName": {
            "type": "SecureString"
        },
        "subscriptions_6140846ca5996c0075070002_displayName": {
            "type": "SecureString"
        },
        "subscriptions_61430fbf4634610f20f4e970_displayName": {
            "type": "SecureString"
        },
        "users_1_lastName": {
            "type": "SecureString"
        },
        "service_mw_apim_test_name": {
            "defaultValue": "mw-apim-test",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2021-01-01-preview",
            "name": "[parameters('service_mw_apim_test_name')]",
            "location": "UK South",
            "sku": {
                "name": "Developer",
                "capacity": 1
            },
            "properties": {
                "publisherEmail": "mike.wild@digital.education.gov.uk",
                "publisherName": "Mike WIld",
                "notificationSenderEmail": "apimgmt-noreply@mail.windowsazure.com",
                "hostnameConfigurations": [
                    {
                        "type": "Proxy",
                        "hostName": "[concat(parameters('service_mw_apim_test_name'), '.azure-api.net')]",
                        "negotiateClientCertificate": false,
                        "defaultSslBinding": true,
                        "certificateSource": "BuiltIn"
                    }
                ],
                "customProperties": {
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Ciphers.TripleDes168": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls11": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Tls10": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Protocols.Ssl30": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls11": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Tls10": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Security.Backend.Protocols.Ssl30": "false",
                    "Microsoft.WindowsAzure.ApiManagement.Gateway.Protocols.Server.Http2": "false"
                },
                "virtualNetworkType": "None",
                "disableGateway": false,
                "apiVersionConstraint": {}
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Echo API",
                "apiRevision": "1",
                "subscriptionRequired": true,
                "serviceUrl": "http://echoapi.cloudapp.net/api",
                "path": "echo",
                "protocols": [
                    "https"
                ],
                "isCurrent": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Twitter API v2",
                "apiRevision": "1",
                "description": "Twitter API v2 available endpoints",
                "subscriptionRequired": true,
                "serviceUrl": "https://api.twitter.com",
                "protocols": [
                    "https"
                ],
                "isCurrent": true,
                "path": "[parameters('apis_twitter_api_v2_path')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Administrators",
                "description": "Administrators is a built-in group. Its membership is managed by the system. Microsoft Azure subscription administrators fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Developers",
                "description": "Developers is a built-in group. Its membership is managed by the system. Signed-in users fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Guests",
                "description": "Guests is a built-in group. Its membership is managed by the system. Unauthenticated users visiting the developer portal fall into this group.",
                "type": "system"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/AccountClosedPublisher')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/BCC')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/NewApplicationNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/NewIssuePublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/PurchasePublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/QuotaLimitApproachingPublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/notifications",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/RequestPublisherNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - Only the <forward-request> policy element can appear within the <backend> section element.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n-->\r\n<policies>\r\n  <inbound />\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound />\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/portalsettings",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/delegation')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subscriptions": {
                    "enabled": false
                },
                "userRegistration": {
                    "enabled": false
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/portalsettings",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/signin')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "enabled": false
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/portalsettings",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/signup')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "enabled": true,
                "termsOfService": {
                    "enabled": false,
                    "consentRequired": false
                }
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/starter')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Starter",
                "description": "Subscribers will be able to run 5 calls/minute up to a maximum of 100 calls/week.",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-proxy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "twitter-proxy",
                "description": "Proxy twitter",
                "subscriptionRequired": true,
                "approvalRequired": false,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/products",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/unlimited')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Unlimited",
                "description": "Subscribers have completely unlimited access to the API. Administrator approval is required.",
                "subscriptionRequired": true,
                "approvalRequired": true,
                "subscriptionsLimit": 1,
                "state": "published"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/master')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "scope": "[concat(resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name')), '/')]",
                "displayName": "Built-in all-access subscription",
                "state": "active",
                "allowTracing": true
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/Compliance')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Compliance"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/General')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "General"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/Lists')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Lists"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/Spaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Spaces"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Tweets"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Users"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/AccountClosedDeveloper')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Thank you for using the $OrganizationName API!",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          On behalf of $OrganizationName and our customers we thank you for giving us a try. Your $OrganizationName API account is now closed.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Your $OrganizationName Team</p>\r\n    <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n    <p />\r\n  </body>\r\n</html>",
                "title": "Developer farewell letter",
                "description": "Developers receive this farewell email after they close their account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/ApplicationApprovedNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your application $AppName is published in the application gallery",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          We are happy to let you know that your request to publish the $AppName application in the application gallery has been approved. Your application has been published and can be viewed <a href=\"http://$DevPortalUrl/Applications/Details/$AppId\">here</a>.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "Application gallery submission approved",
                "description": "Developers who submitted their application for publication in the application gallery on the developer portal receive this email after their submission is approved.",
                "parameters": [
                    {
                        "name": "AppId",
                        "title": "Application id"
                    },
                    {
                        "name": "AppName",
                        "title": "Application name"
                    },
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/ConfirmSignUpIdentityDefault')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Please confirm your new $OrganizationName API account",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you for joining the $OrganizationName API program! We host a growing number of cool APIs and strive to provide an awesome experience for API developers.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">First order of business is to activate your account and get you going. To that end, please click on the following link:</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a id=\"confirmUrl\" href=\"$ConfirmUrl\" style=\"text-decoration:none\">\r\n              <strong>$ConfirmUrl</strong>\r\n            </a>\r\n          </p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">If clicking the link does not work, please copy-and-paste or re-type it into your browser's address bar and hit \"Enter\".</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "New developer account confirmation",
                "description": "Developers receive this email to confirm their e-mail address after they sign up for a new account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Developer activation URL"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the activation URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/EmailChangeIdentityDefault')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Please confirm the new email associated with your $OrganizationName API account",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">You are receiving this email because you made a change to the email address on your $OrganizationName API account.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Please click on the following link to confirm the change:</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a id=\"confirmUrl\" href=\"$ConfirmUrl\" style=\"text-decoration:none\">\r\n              <strong>$ConfirmUrl</strong>\r\n            </a>\r\n          </p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">If clicking the link does not work, please copy-and-paste or re-type it into your browser's address bar and hit \"Enter\".</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "Email change confirmation",
                "description": "Developers receive this email to confirm a new e-mail address after they change their existing one associated with their account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Developer confirmation URL"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the confirmation URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/InviteUserNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "You are invited to join the $OrganizationName developer network",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Your account has been created. Please follow the link below to visit the $OrganizationName developer portal and claim it:\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <a href=\"$ConfirmUrl\">$ConfirmUrl</a>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "Invite user",
                "description": "An e-mail invitation to create an account, sent on request by API publishers.",
                "parameters": [
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Confirmation link"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the confirmation link"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/NewCommentNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "$IssueName issue has a new comment",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">This is a brief note to let you know that $CommenterFirstName $CommenterLastName made the following comment on the issue $IssueName you created:</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">$CommentText</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          To view the issue on the developer portal click <a href=\"http://$DevPortalUrl/issues/$IssueId\">here</a>.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "New comment added to an issue",
                "description": "Developers receive this email when someone comments on the issue they created on the Issues page of the developer portal.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "CommenterFirstName",
                        "title": "Commenter first name"
                    },
                    {
                        "name": "CommenterLastName",
                        "title": "Commenter last name"
                    },
                    {
                        "name": "IssueId",
                        "title": "Issue id"
                    },
                    {
                        "name": "IssueName",
                        "title": "Issue name"
                    },
                    {
                        "name": "CommentText",
                        "title": "Comment text"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/NewDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Welcome to the $OrganizationName API!",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <h1 style=\"color:#000505;font-size:18pt;font-family:'Segoe UI'\">\r\n          Welcome to <span style=\"color:#003363\">$OrganizationName API!</span></h1>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Your $OrganizationName API program registration is completed and we are thrilled to have you as a customer. Here are a few important bits of information for your reference:</p>\r\n    <table width=\"100%\" style=\"margin:20px 0\">\r\n      <tr>\r\n            #if ($IdentityProvider == \"Basic\")\r\n            <td width=\"50%\" style=\"height:40px;vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n              Please use the following <strong>username</strong> when signing into any of the ${OrganizationName}-hosted developer portals:\r\n            </td><td style=\"vertical-align:top;font-family:'Segoe UI';font-size:12pt\"><strong>$DevUsername</strong></td>\r\n            #else\r\n            <td width=\"50%\" style=\"height:40px;vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n              Please use the following <strong>$IdentityProvider account</strong> when signing into any of the ${OrganizationName}-hosted developer portals:\r\n            </td><td style=\"vertical-align:top;font-family:'Segoe UI';font-size:12pt\"><strong>$DevUsername</strong></td>            \r\n            #end\r\n          </tr>\r\n      <tr>\r\n        <td style=\"height:40px;vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n              We will direct all communications to the following <strong>email address</strong>:\r\n            </td>\r\n        <td style=\"vertical-align:top;font-family:'Segoe UI';font-size:12pt\">\r\n          <a href=\"mailto:$DevEmail\" style=\"text-decoration:none\">\r\n            <strong>$DevEmail</strong>\r\n          </a>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best of luck in your API pursuits!</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <a href=\"http://$DevPortalUrl\">$DevPortalUrl</a>\r\n    </p>\r\n  </body>\r\n</html>",
                "title": "Developer welcome letter",
                "description": "Developers receive this “welcome” email after they confirm their new account.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "DevUsername",
                        "title": "Developer user name"
                    },
                    {
                        "name": "DevEmail",
                        "title": "Developer email"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "IdentityProvider",
                        "title": "Identity Provider selected by Organization"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/NewIssueNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your request $IssueName was received",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you for contacting us. Our API team will review your issue and get back to you soon.</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Click this <a href=\"http://$DevPortalUrl/issues/$IssueId\">link</a> to view or edit your request.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Best,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n  </body>\r\n</html>",
                "title": "New issue received",
                "description": "This email is sent to developers after they create a new topic on the Issues page of the developer portal.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "IssueId",
                        "title": "Issue id"
                    },
                    {
                        "name": "IssueName",
                        "title": "Issue name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/PasswordResetByAdminNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your password was reset",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">The password of your $OrganizationName API account has been reset, per your request.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n                Your new password is: <strong>$DevPassword</strong></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Please make sure to change it next time you sign in.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "Password reset by publisher notification (Password reset by admin)",
                "description": "Developers receive this email when the publisher resets their password.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "DevPassword",
                        "title": "New Developer password"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/PasswordResetIdentityDefault')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your password change request",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <meta charset=\"UTF-8\" />\r\n    <title>Letter</title>\r\n  </head>\r\n  <body>\r\n    <table width=\"100%\">\r\n      <tr>\r\n        <td>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\"></p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">You are receiving this email because you requested to change the password on your $OrganizationName API account.</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Please click on the link below and follow instructions to create your new password:</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a id=\"resetUrl\" href=\"$ConfirmUrl\" style=\"text-decoration:none\">\r\n              <strong>$ConfirmUrl</strong>\r\n            </a>\r\n          </p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">If clicking the link does not work, please copy-and-paste or re-type it into your browser's address bar and hit \"Enter\".</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">$OrganizationName API Team</p>\r\n          <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n          </p>\r\n        </td>\r\n      </tr>\r\n    </table>\r\n  </body>\r\n</html>",
                "title": "Password change confirmation",
                "description": "Developers receive this email when they request a password change of their account. The purpose of the email is to verify that the account owner made the request and to provide a one-time perishable URL for changing the password.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "ConfirmUrl",
                        "title": "Developer new password instruction URL"
                    },
                    {
                        "name": "DevPortalHost",
                        "title": "Developer portal hostname"
                    },
                    {
                        "name": "ConfirmQuery",
                        "title": "Query string part of the instruction URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/PurchaseDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your subscription to the $ProdName",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Greetings $DevFirstName $DevLastName!</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Thank you for subscribing to the <a href=\"http://$DevPortalUrl/products/$ProdId\"><strong>$ProdName</strong></a> and welcome to the $OrganizationName developer community. We are delighted to have you as part of the team and are looking forward to the amazing applications you will build using our API!\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Below are a few subscription details for your reference:</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <ul>\r\n            #if ($SubStartDate != \"\")\r\n            <li style=\"font-size:12pt;font-family:'Segoe UI'\">Start date: $SubStartDate</li>\r\n            #end\r\n            \r\n            #if ($SubTerm != \"\")\r\n            <li style=\"font-size:12pt;font-family:'Segoe UI'\">Subscription term: $SubTerm</li>\r\n            #end\r\n          </ul>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n            Visit the developer <a href=\"http://$DevPortalUrl/developer\">profile area</a> to manage your subscription and subscription keys\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">A couple of pointers to help get you started:</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <strong>\r\n        <a href=\"http://$DevPortalUrl/docs/services?product=$ProdId\">Learn about the API</a>\r\n      </strong>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The API documentation provides all information necessary to make a request and to process a response. Code samples are provided per API operation in a variety of languages. Moreover, an interactive console allows making API calls directly from the developer portal without writing any code.</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <strong>\r\n        <a href=\"http://$DevPortalUrl/applications\">Feature your app in the app gallery</a>\r\n      </strong>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">You can publish your application on our gallery for increased visibility to potential new users.</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n      <strong>\r\n        <a href=\"http://$DevPortalUrl/issues\">Stay in touch</a>\r\n      </strong>\r\n    </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          If you have an issue, a question, a suggestion, a request, or if you just want to tell us something, go to the <a href=\"http://$DevPortalUrl/issues\">Issues</a> page on the developer portal and create a new topic.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Happy hacking,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n    <a style=\"font-size:12pt;font-family:'Segoe UI'\" href=\"http://$DevPortalUrl\">$DevPortalUrl</a>\r\n  </body>\r\n</html>",
                "title": "New subscription activated",
                "description": "Developers receive this acknowledgement email after subscribing to a product.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "ProdId",
                        "title": "Product ID"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "SubStartDate",
                        "title": "Subscription start date"
                    },
                    {
                        "name": "SubTerm",
                        "title": "Subscription term"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/QuotaLimitApproachingDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "You are approaching an API quota limit",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head>\r\n    <style>\r\n          body {font-size:12pt; font-family:\"Segoe UI\",\"Segoe WP\",\"Tahoma\",\"Arial\",\"sans-serif\";}\r\n          .alert { color: red; }\r\n          .child1 { padding-left: 20px; }\r\n          .child2 { padding-left: 40px; }\r\n          .number { text-align: right; }\r\n          .text { text-align: left; }\r\n          th, td { padding: 4px 10px; min-width: 100px; }\r\n          th { background-color: #DDDDDD;}\r\n        </style>\r\n  </head>\r\n  <body>\r\n    <p>Greetings $DevFirstName $DevLastName!</p>\r\n    <p>\r\n          You are approaching the quota limit on you subscription to the <strong>$ProdName</strong> product (primary key $SubPrimaryKey).\r\n          #if ($QuotaResetDate != \"\")\r\n          This quota will be renewed on $QuotaResetDate.\r\n          #else\r\n          This quota will not be renewed.\r\n          #end\r\n        </p>\r\n    <p>Below are details on quota usage for the subscription:</p>\r\n    <p>\r\n      <table>\r\n        <thead>\r\n          <th class=\"text\">Quota Scope</th>\r\n          <th class=\"number\">Calls</th>\r\n          <th class=\"number\">Call Quota</th>\r\n          <th class=\"number\">Bandwidth</th>\r\n          <th class=\"number\">Bandwidth Quota</th>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            <td class=\"text\">Subscription</td>\r\n            <td class=\"number\">\r\n                  #if ($CallsAlert == true)\r\n                  <span class=\"alert\">$Calls</span>\r\n                  #else\r\n                  $Calls\r\n                  #end\r\n                </td>\r\n            <td class=\"number\">$CallQuota</td>\r\n            <td class=\"number\">\r\n                  #if ($BandwidthAlert == true)\r\n                  <span class=\"alert\">$Bandwidth</span>\r\n                  #else\r\n                  $Bandwidth\r\n                  #end\r\n                </td>\r\n            <td class=\"number\">$BandwidthQuota</td>\r\n          </tr>\r\n              #foreach ($api in $Apis)\r\n              <tr><td class=\"child1 text\">API: $api.Name</td><td class=\"number\">\r\n                  #if ($api.CallsAlert == true)\r\n                  <span class=\"alert\">$api.Calls</span>\r\n                  #else\r\n                  $api.Calls\r\n                  #end\r\n                </td><td class=\"number\">$api.CallQuota</td><td class=\"number\">\r\n                  #if ($api.BandwidthAlert == true)\r\n                  <span class=\"alert\">$api.Bandwidth</span>\r\n                  #else\r\n                  $api.Bandwidth\r\n                  #end\r\n                </td><td class=\"number\">$api.BandwidthQuota</td></tr>\r\n              #foreach ($operation in $api.Operations)\r\n              <tr><td class=\"child2 text\">Operation: $operation.Name</td><td class=\"number\">\r\n                  #if ($operation.CallsAlert == true)\r\n                  <span class=\"alert\">$operation.Calls</span>\r\n                  #else\r\n                  $operation.Calls\r\n                  #end\r\n                </td><td class=\"number\">$operation.CallQuota</td><td class=\"number\">\r\n                  #if ($operation.BandwidthAlert == true)\r\n                  <span class=\"alert\">$operation.Bandwidth</span>\r\n                  #else\r\n                  $operation.Bandwidth\r\n                  #end\r\n                </td><td class=\"number\">$operation.BandwidthQuota</td></tr>\r\n              #end\r\n              #end\r\n            </tbody>\r\n      </table>\r\n    </p>\r\n    <p>Thank you,</p>\r\n    <p>$OrganizationName API Team</p>\r\n    <a href=\"$DevPortalUrl\">$DevPortalUrl</a>\r\n    <p />\r\n  </body>\r\n</html>",
                "title": "Developer quota limit approaching notification",
                "description": "Developers receive this email to alert them when they are approaching a quota limit.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "SubPrimaryKey",
                        "title": "Primary Subscription key"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    },
                    {
                        "name": "QuotaResetDate",
                        "title": "Quota reset date"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/RejectDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your subscription request for the $ProdName",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          We would like to inform you that we reviewed your subscription request for the <strong>$ProdName</strong>.\r\n        </p>\r\n        #if ($SubDeclineReason == \"\")\r\n        <p style=\"font-size:12pt;font-family:'Segoe UI'\">Regretfully, we were unable to approve it, as subscriptions are temporarily suspended at this time.</p>\r\n        #else\r\n        <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Regretfully, we were unable to approve it at this time for the following reason:\r\n          <div style=\"margin-left: 1.5em;\"> $SubDeclineReason </div></p>\r\n        #end\r\n        <p style=\"font-size:12pt;font-family:'Segoe UI'\"> We truly appreciate your interest. </p><p style=\"font-size:12pt;font-family:'Segoe UI'\">All the best,</p><p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p><a style=\"font-size:12pt;font-family:'Segoe UI'\" href=\"http://$DevPortalUrl\">$DevPortalUrl</a></body>\r\n</html>",
                "title": "Subscription request declined",
                "description": "This email is sent to developers when their subscription requests for products requiring publisher approval is declined.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "SubDeclineReason",
                        "title": "Reason for declining subscription"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/templates",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/RequestDeveloperNotificationMessage')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "subject": "Your subscription request for the $ProdName",
                "body": "<!DOCTYPE html >\r\n<html>\r\n  <head />\r\n  <body>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Dear $DevFirstName $DevLastName,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          Thank you for your interest in our <strong>$ProdName</strong> API product!\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">\r\n          We were delighted to receive your subscription request. We will promptly review it and get back to you at <strong>$DevEmail</strong>.\r\n        </p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">Thank you,</p>\r\n    <p style=\"font-size:12pt;font-family:'Segoe UI'\">The $OrganizationName API Team</p>\r\n    <a style=\"font-size:12pt;font-family:'Segoe UI'\" href=\"http://$DevPortalUrl\">$DevPortalUrl</a>\r\n  </body>\r\n</html>",
                "title": "Subscription request received",
                "description": "This email is sent to developers to acknowledge receipt of their subscription requests for products requiring publisher approval.",
                "parameters": [
                    {
                        "name": "DevFirstName",
                        "title": "Developer first name"
                    },
                    {
                        "name": "DevLastName",
                        "title": "Developer last name"
                    },
                    {
                        "name": "DevEmail",
                        "title": "Developer email"
                    },
                    {
                        "name": "ProdName",
                        "title": "Product name"
                    },
                    {
                        "name": "OrganizationName",
                        "title": "Organization name"
                    },
                    {
                        "name": "DevPortalUrl",
                        "title": "Developer portal URL"
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/users",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "firstName": "Administrator",
                "email": "mike.wild@digital.education.gov.uk",
                "state": "active",
                "identities": [
                    {
                        "provider": "Azure",
                        "id": "mike.wild@digital.education.gov.uk"
                    }
                ],
                "lastName": "[parameters('users_1_lastName')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/addOrDeleteRules')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Add/Delete rules",
                "method": "POST",
                "urlTemplate": "/2/tweets/search/stream/rules",
                "templateParameters": [],
                "description": "Add or delete rules from a user's active rule set. Users can provide unique, optionally tagged rules to add. Users can delete their entire rule set or a subset specified by rule ids or values.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "dry_run",
                            "description": "Dry Run can be used with both the add and delete action, with the expected result given, but without actually taking any action in the system (meaning the end state will always be as it was when the request was submitted). This is particularly useful to validate rule changes.",
                            "type": "boolean",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchStreamRulesPostRequest"
                        }
                    ],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "AddOrDeleteRulesRequest",
                            "sample": "{\r\n  \"add\": [\r\n    {\r\n      \"value\": \"coffee -is:retweet\",\r\n      \"tag\": \"Non-retweeted coffee tweets\"\r\n    }\r\n  ]\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "AddOrDeleteRulesResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"value\": \"coffee -is:retweet\",\r\n      \"tag\": \"Non-retweeted coffee tweets\",\r\n      \"id\": \"120897978112909812\"\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"sent\": \"string\",\r\n    \"summary\": {\r\n      \"created\": 1,\r\n      \"not_created\": 1,\r\n      \"valid\": 1,\r\n      \"invalid\": 1\r\n    }\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/createBatchComplianceJob')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Create compliance job",
                "method": "POST",
                "urlTemplate": "/2/compliance/jobs",
                "templateParameters": [],
                "description": "Creates a compliance for the given job type",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2ComplianceJobsPostRequest",
                            "sample": "{\r\n  \"type\": {},\r\n  \"resumable\": true,\r\n  \"name\": \"my-job\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "SingleComplianceJobResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"1372966999991541762\",\r\n    \"type\": {},\r\n    \"created_at\": \"2021-01-06T18:40:40+00:00\",\r\n    \"upload_url\": \"string\",\r\n    \"upload_expires_at\": \"2021-01-06T18:40:40+00:00\",\r\n    \"download_url\": \"string\",\r\n    \"download_expires_at\": \"2021-01-06T18:40:40+00:00\",\r\n    \"name\": \"my-job\",\r\n    \"status\": {}\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/create-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Create resource",
                "method": "POST",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a POST call based on the echo backend above. The request body is expected to contain JSON-formatted data (see example below). A policy is used to automatically transform any request sent in JSON directly to XML. In a real-world scenario this could be used to enable modern clients to speak to a legacy backend.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "sample": "{\r\n\t\"vehicleType\": \"train\",\r\n\t\"maxSpeed\": 125,\r\n\t\"avgSpeed\": 90,\r\n\t\"speedUnit\": \"mph\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findSpaceById')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Space lookup by Space ID",
                "method": "GET",
                "urlTemplate": "/2/spaces/{id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The space id to be retrieved",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "SpaceID"
                    }
                ],
                "description": "Returns a variety of information about the Space specified by the requested ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "space.fields",
                            "description": "A comma separated list of Space fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "SingleSpaceLookupResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"1SLjjRYNejbKM\",\r\n    \"state\": \"live\",\r\n    \"started_at\": \"2021-07-14T04:35:55+00:00\",\r\n    \"is_ticketed\": \"false\",\r\n    \"participant_count\": 10,\r\n    \"title\": \"Spaces are Awesome\",\r\n    \"host_ids\": [\r\n      \"2244994945\"\r\n    ],\r\n    \"updated_at\": \"2021-07-14T04:35:55+00:00\",\r\n    \"created_at\": \"2021-07-06T18:40:40+00:00\",\r\n    \"creator_id\": \"2244994945\",\r\n    \"lang\": \"en\",\r\n    \"speaker_ids\": [\r\n      \"2244994945\"\r\n    ],\r\n    \"invited_user_ids\": [\r\n      \"2244994945\"\r\n    ],\r\n    \"scheduled_start\": \"2021-07-06T18:40:40+00:00\"\r\n  },\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findSpacesByCreatorIds')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Space lookup by their creators",
                "method": "GET",
                "urlTemplate": "/2/spaces/by/creator_ids?user_ids={user_ids}",
                "templateParameters": [
                    {
                        "name": "user_ids",
                        "description": "The users to search through",
                        "type": "array",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2SpacesByCreator_idsGetRequest"
                    }
                ],
                "description": "Returns a variety of information about the Spaces created by the provided User IDs",
                "request": {
                    "queryParameters": [
                        {
                            "name": "space.fields",
                            "description": "A comma separated list of Space fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiSpaceLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1SLjjRYNejbKM\",\r\n      \"state\": \"live\",\r\n      \"started_at\": \"2021-07-14T04:35:55+00:00\",\r\n      \"is_ticketed\": \"false\",\r\n      \"participant_count\": 10,\r\n      \"title\": \"Spaces are Awesome\",\r\n      \"host_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"updated_at\": \"2021-07-14T04:35:55+00:00\",\r\n      \"created_at\": \"2021-07-06T18:40:40+00:00\",\r\n      \"creator_id\": \"2244994945\",\r\n      \"lang\": \"en\",\r\n      \"speaker_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"invited_user_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"scheduled_start\": \"2021-07-06T18:40:40+00:00\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findSpacesByIds')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Space lookup up Space IDs",
                "method": "GET",
                "urlTemplate": "/2/spaces?ids={ids}",
                "templateParameters": [
                    {
                        "name": "ids",
                        "description": "A list of space ids",
                        "type": "array",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2SpacesGetRequest"
                    }
                ],
                "description": "Returns a variety of information about the Spaces specified by the requested IDs",
                "request": {
                    "queryParameters": [
                        {
                            "name": "space.fields",
                            "description": "A comma separated list of Space fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiSpaceLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1SLjjRYNejbKM\",\r\n      \"state\": \"live\",\r\n      \"started_at\": \"2021-07-14T04:35:55+00:00\",\r\n      \"is_ticketed\": \"false\",\r\n      \"participant_count\": 10,\r\n      \"title\": \"Spaces are Awesome\",\r\n      \"host_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"updated_at\": \"2021-07-14T04:35:55+00:00\",\r\n      \"created_at\": \"2021-07-06T18:40:40+00:00\",\r\n      \"creator_id\": \"2244994945\",\r\n      \"lang\": \"en\",\r\n      \"speaker_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"invited_user_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"scheduled_start\": \"2021-07-06T18:40:40+00:00\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findTweetById')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Tweet lookup by Tweet ID",
                "method": "GET",
                "urlTemplate": "/2/tweets/{id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "A single Tweet ID.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "TweetID"
                    }
                ],
                "description": "Returns a variety of information about the Tweet specified by the requested ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "SingleTweetLookupResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"1346889436626259968\",\r\n    \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n    \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n    \"author_id\": \"2244994945\"\r\n  },\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findTweetsById')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Tweet lookup by Tweet IDs",
                "method": "GET",
                "urlTemplate": "/2/tweets?ids={ids}",
                "templateParameters": [
                    {
                        "name": "ids",
                        "description": "A comma separated list of Tweet IDs. Up to 100 are allowed in a single request.",
                        "type": "array",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2TweetsGetRequest"
                    }
                ],
                "description": "Returns a variety of information about the Tweet specified by the requested ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiTweetLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1346889436626259968\",\r\n      \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n      \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n      \"author_id\": \"2244994945\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUserById')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "User lookup by ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "Required. A User ID.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID"
                    }
                ],
                "description": "This endpoint returns information about a user. Specify user by ID.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "SingleUserLookupResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"2244994945\",\r\n    \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n    \"name\": \"Twitter Dev\",\r\n    \"username\": \"TwitterDev\",\r\n    \"protected\": false\r\n  },\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUserByUsername')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "User lookup by username",
                "method": "GET",
                "urlTemplate": "/2/users/by/username/{username}",
                "templateParameters": [
                    {
                        "name": "username",
                        "description": "Required. A username.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserName"
                    }
                ],
                "description": "This endpoint returns information about a user. Specify user by username.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "SingleUserLookupResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"2244994945\",\r\n    \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n    \"name\": \"Twitter Dev\",\r\n    \"username\": \"TwitterDev\",\r\n    \"protected\": false\r\n  },\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUsersById')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "User lookup by IDs",
                "method": "GET",
                "urlTemplate": "/2/users?ids={ids}",
                "templateParameters": [
                    {
                        "name": "ids",
                        "description": "Required. A list of User IDs, comma-separated. You can specify up to 100 IDs.",
                        "type": "array",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2UsersGetRequest"
                    }
                ],
                "description": "This endpoint returns information about users. Specify users by their ID.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiUserLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUsersByUsername')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "User lookup by usernames",
                "method": "GET",
                "urlTemplate": "/2/users/by?usernames={usernames}",
                "templateParameters": [
                    {
                        "name": "usernames",
                        "description": "Required . A list of usernames, comma-separated. You can specify up to 100 usernames.",
                        "type": "array",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2UsersByGetRequest"
                    }
                ],
                "description": "This endpoint returns information about users. Specify users by their username.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiUserLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/getBatchComplianceJob')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Get compliance job",
                "method": "GET",
                "urlTemplate": "/2/compliance/jobs/{id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "ID of the compliance job to retrieve.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "JobId"
                    }
                ],
                "description": "Returns a single compliance job by ID",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "SingleComplianceJobResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"1372966999991541762\",\r\n    \"type\": {},\r\n    \"created_at\": \"2021-01-06T18:40:40+00:00\",\r\n    \"upload_url\": \"string\",\r\n    \"upload_expires_at\": \"2021-01-06T18:40:40+00:00\",\r\n    \"download_url\": \"string\",\r\n    \"download_expires_at\": \"2021-01-06T18:40:40+00:00\",\r\n    \"name\": \"my-job\",\r\n    \"status\": {}\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/getOpenApiSpec')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Returns the open api spec document.",
                "method": "GET",
                "urlTemplate": "/2/openapi.json",
                "templateParameters": [],
                "description": "Full open api spec in JSON format. (See https://github.com/OAI/OpenAPI-Specification/blob/master/README.md)",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "2Openapi-jsonGet200ApplicationJsonResponse",
                                "sample": "{}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/getRules')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Rules lookup",
                "method": "GET",
                "urlTemplate": "/2/tweets/search/stream/rules",
                "templateParameters": [],
                "description": "Returns rules from a user's active rule set. Users can fetch all of their rules or a subset, specified by the provided rule ids.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "ids",
                            "description": "A comma-separated list of Rule IDs.",
                            "type": "array",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchStreamRulesGetRequest"
                        },
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "defaultValue": "1000",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchStreamRulesGetRequest-1"
                        },
                        {
                            "name": "pagination_token",
                            "description": "This value is populated by passing the 'next_token' returned in a request to paginate through results.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchStreamRulesGetRequest-2"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "2TweetsSearchStreamRulesGet200ApplicationJsonResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"value\": \"coffee -is:retweet\",\r\n      \"tag\": \"Non-retweeted coffee tweets\",\r\n      \"id\": \"120897978112909812\"\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"sent\": \"string\",\r\n    \"summary\": {\r\n      \"created\": 1,\r\n      \"not_created\": 1,\r\n      \"valid\": 1,\r\n      \"invalid\": 1\r\n    }\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/hideReplyById')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Hide replies",
                "method": "PUT",
                "urlTemplate": "/2/tweets/{id}/hidden",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the reply that you want to hide or unhide.",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "TweetID",
                        "type": "[parameters('operations_hideReplyById_type')]"
                    }
                ],
                "description": "Hides or unhides a reply to an owned conversation.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Tweets-id-HiddenPutRequest",
                            "sample": "{\r\n  \"hidden\": true\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "A successful response. The reply has been hidden or unhidden.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "2Tweets-id-HiddenPut200ApplicationJsonResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"hidden\": true\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/listBatchComplianceJobs')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "List compliance jobs",
                "method": "GET",
                "urlTemplate": "/2/compliance/jobs?type={type}",
                "templateParameters": [
                    {
                        "name": "type",
                        "description": "Type of compliance job to list.",
                        "type": "string",
                        "required": true,
                        "values": [
                            "tweets",
                            "users"
                        ],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "ComplianceJobType"
                    }
                ],
                "description": "Returns recent compliance jobs for a given job type and optional job status",
                "request": {
                    "queryParameters": [
                        {
                            "name": "status",
                            "description": "Status of compliance job to list.",
                            "type": "string",
                            "values": [
                                "created",
                                "in_progress",
                                "failed",
                                "complete"
                            ],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "ComplianceJobStatus"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "List compliance jobs response",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiComplianceJobResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1372966999991541762\",\r\n      \"type\": {},\r\n      \"created_at\": \"2021-01-06T18:40:40+00:00\",\r\n      \"upload_url\": \"string\",\r\n      \"upload_expires_at\": \"2021-01-06T18:40:40+00:00\",\r\n      \"download_url\": \"string\",\r\n      \"download_expires_at\": \"2021-01-06T18:40:40+00:00\",\r\n      \"name\": \"my-job\",\r\n      \"status\": {}\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/modify-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Modify Resource",
                "method": "PUT",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a PUT call handled by the same \"echo\" backend as above. You can now specify a request body in addition to headers and it will be returned as well.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/remove-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Remove resource",
                "method": "DELETE",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a DELETE call which traditionally deletes the resource. It is based on the same \"echo\" backend as in all other operations so nothing is actually deleted.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/retrieve-header-only')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve header only",
                "method": "HEAD",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "The HEAD operation returns only headers. In this demonstration a policy is used to set additional headers when the response is returned and to enable JSONP.",
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/retrieve-resource')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve resource",
                "method": "GET",
                "urlTemplate": "/resource",
                "templateParameters": [],
                "description": "A demonstration of a GET call on a sample resource. It is handled by an \"echo\" backend which returns a response equal to the request (the supplied headers and body are being returned as received).",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "number",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Returned in all cases.",
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/retrieve-resource-cached')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Retrieve resource (cached)",
                "method": "GET",
                "urlTemplate": "/resource-cached",
                "templateParameters": [],
                "description": "A demonstration of a GET call with caching enabled on the same \"echo\" backend as above. Cache TTL is set to 1 hour. When you make the first request the headers you supplied will be cached. Subsequent calls will return the same headers as the first time even if you change them in your request.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "param1",
                            "description": "A sample parameter that is required and has a default value of \"sample\".",
                            "type": "string",
                            "defaultValue": "sample",
                            "required": true,
                            "values": [
                                "sample"
                            ]
                        },
                        {
                            "name": "param2",
                            "description": "Another sample parameter, set to not required.",
                            "type": "string",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "representations": [],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/sampleStream')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Sample stream",
                "method": "GET",
                "urlTemplate": "/2/tweets/sample/stream",
                "templateParameters": [],
                "description": "Streams a deterministic 1% of public Tweets.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "backfill_minutes",
                            "description": "Format - int32. The number of minutes of backfill requested",
                            "type": "integer",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful. Successful responses will return a stream of individual JSON Tweet payloads.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "StreamingTweet",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"1346889436626259968\",\r\n    \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n    \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n    \"author_id\": \"2244994945\"\r\n  },\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/searchSpaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Search for Spaces",
                "method": "GET",
                "urlTemplate": "/2/spaces/search?query={query}",
                "templateParameters": [
                    {
                        "name": "query",
                        "description": "The search query",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2SpacesSearchGetRequest"
                    }
                ],
                "description": "Returns Spaces that match the provided query.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "state",
                            "description": "The state of spaces to search for",
                            "type": "string",
                            "defaultValue": "all",
                            "values": [
                                "live",
                                "scheduled",
                                "all"
                            ],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2SpacesSearchGetRequest-1"
                        },
                        {
                            "name": "max_results",
                            "description": "Format - int32. The number of results to return. The maximum for this value is 100.",
                            "type": "integer",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2SpacesSearchGetRequest-2"
                        },
                        {
                            "name": "space.fields",
                            "description": "A comma separated list of Space fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "MultiSpaceLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1SLjjRYNejbKM\",\r\n      \"state\": \"live\",\r\n      \"started_at\": \"2021-07-14T04:35:55+00:00\",\r\n      \"is_ticketed\": \"false\",\r\n      \"participant_count\": 10,\r\n      \"title\": \"Spaces are Awesome\",\r\n      \"host_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"updated_at\": \"2021-07-14T04:35:55+00:00\",\r\n      \"created_at\": \"2021-07-06T18:40:40+00:00\",\r\n      \"creator_id\": \"2244994945\",\r\n      \"lang\": \"en\",\r\n      \"speaker_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"invited_user_ids\": [\r\n        \"2244994945\"\r\n      ],\r\n      \"scheduled_start\": \"2021-07-06T18:40:40+00:00\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/searchStream')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Filtered stream",
                "method": "GET",
                "urlTemplate": "/2/tweets/search/stream",
                "templateParameters": [],
                "description": "Streams Tweets matching the stream's active rule set.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "backfill_minutes",
                            "description": "Format - int32. The number of minutes of backfill requested",
                            "type": "integer",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful. Successful responses will return a stream of individual JSON Tweet payloads.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "FilteredStreamingTweet",
                                "sample": "{\r\n  \"data\": {\r\n    \"id\": \"1346889436626259968\",\r\n    \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n    \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n    \"author_id\": \"2244994945\"\r\n  },\r\n  \"matching_rules\": [\r\n    {\r\n      \"id\": \"120897978112909812\",\r\n      \"tag\": \"string\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetCountsFullArchiveSearch')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Full archive search counts",
                "method": "GET",
                "urlTemplate": "/2/tweets/counts/all?query={query}",
                "templateParameters": [
                    {
                        "name": "query",
                        "description": "One query/rule/filter for matching Tweets. Up to 2048 characters.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2TweetsCountsAllGetRequest"
                    }
                ],
                "description": "Returns Tweet Counts that match a search query.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "start_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsCountsAllGetRequest-1"
                        },
                        {
                            "name": "end_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsCountsAllGetRequest-2"
                        },
                        {
                            "name": "since_id",
                            "description": "Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetCountsFullArchiveSearch_type')]"
                        },
                        {
                            "name": "until_id",
                            "description": "Returns results with a Tweet ID less than (that is, older than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetCountsFullArchiveSearch_type_1')]"
                        },
                        {
                            "name": "next_token",
                            "description": "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsCountsAllGetRequest-3"
                        },
                        {
                            "name": "granularity",
                            "description": "The granularity for the search counts results.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "Granularity",
                            "type": "[parameters('operations_tweetCountsFullArchiveSearch_type_2')]"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Tweet counts response",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "TweetCountsResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"end\": \"string\",\r\n      \"start\": \"string\",\r\n      \"tweet_count\": 0\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"next_token\": \"string\",\r\n    \"total_tweet_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetCountsRecentSearch')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Recent search counts",
                "method": "GET",
                "urlTemplate": "/2/tweets/counts/recent?query={query}",
                "templateParameters": [
                    {
                        "name": "query",
                        "description": "One query/rule/filter for matching Tweets. Up to 2048 characters.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2TweetsCountsRecentGetRequest"
                    }
                ],
                "description": "Returns Tweet Counts from the last 7 days that match a search query.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "start_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsCountsRecentGetRequest-1"
                        },
                        {
                            "name": "end_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsCountsRecentGetRequest-2"
                        },
                        {
                            "name": "since_id",
                            "description": "Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetCountsRecentSearch_type')]"
                        },
                        {
                            "name": "until_id",
                            "description": "Returns results with a Tweet ID less than (that is, older than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetCountsRecentSearch_type_1')]"
                        },
                        {
                            "name": "next_token",
                            "description": "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsCountsRecentGetRequest-3"
                        },
                        {
                            "name": "granularity",
                            "description": "The granularity for the search counts results.",
                            "type": "string",
                            "defaultValue": "hour",
                            "values": [
                                "minute",
                                "hour",
                                "day"
                            ],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "Granularity"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Recent tweet counts response",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "TweetCountsResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"end\": \"string\",\r\n      \"start\": \"string\",\r\n      \"tweet_count\": 0\r\n    }\r\n  ],\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"next_token\": \"string\",\r\n    \"total_tweet_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsFullarchiveSearch')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Full-archive search",
                "method": "GET",
                "urlTemplate": "/2/tweets/search/all?query={query}",
                "templateParameters": [
                    {
                        "name": "query",
                        "description": "One query/rule/filter for matching Tweets. Up to 1024 characters.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2TweetsSearchAllGetRequest"
                    }
                ],
                "description": "Returns Tweets that match a search query.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "start_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchAllGetRequest-1"
                        },
                        {
                            "name": "end_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchAllGetRequest-2"
                        },
                        {
                            "name": "since_id",
                            "description": "Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetsFullarchiveSearch_type')]"
                        },
                        {
                            "name": "until_id",
                            "description": "Returns results with a Tweet ID less than (that is, older than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetsFullarchiveSearch_type_1')]"
                        },
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of search results to be returned by a request.",
                            "type": "integer",
                            "defaultValue": "10",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchAllGetRequest-3"
                        },
                        {
                            "name": "next_token",
                            "description": "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchAllGetRequest-4"
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Tweets full archive search response",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "TweetSearchResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1346889436626259968\",\r\n      \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n      \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n      \"author_id\": \"2244994945\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"newest_id\": \"string\",\r\n    \"oldest_id\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsIdLikingUsers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Returns user objects that have liked the provided Tweet ID",
                "method": "GET",
                "urlTemplate": "/2/tweets/{id}/liking_users",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the Tweet for which to return results",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "TweetID",
                        "type": "[parameters('operations_tweetsIdLikingUsers_type')]"
                    }
                ],
                "description": "Returns a list of users that have liked the provided Tweet ID",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "GenericMultipleUsersLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsIdRetweetingUsers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Returns user objects that have retweeted the provided Tweet ID",
                "method": "GET",
                "urlTemplate": "/2/tweets/{id}/retweeted_by",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the Tweet for which to return results",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "TweetID",
                        "type": "[parameters('operations_tweetsIdRetweetingUsers_type')]"
                    }
                ],
                "description": "Returns a list of users that have retweeted the provided Tweet ID",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "GenericMultipleUsersLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsRecentSearch')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Recent search",
                "method": "GET",
                "urlTemplate": "/2/tweets/search/recent?query={query}",
                "templateParameters": [
                    {
                        "name": "query",
                        "description": "One query/rule/filter for matching Tweets. Up to 512 characters.",
                        "type": "string",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "2TweetsSearchRecentGetRequest"
                    }
                ],
                "description": "Returns Tweets from the last 7 days that match a search query.",
                "request": {
                    "queryParameters": [
                        {
                            "name": "start_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The oldest UTC timestamp (from most recent 7 days) from which the Tweets will be provided. Timestamp is in second granularity and is inclusive (i.e. 12:00:01 includes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchRecentGetRequest-1"
                        },
                        {
                            "name": "end_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The newest, most recent UTC timestamp to which the Tweets will be provided. Timestamp is in second granularity and is exclusive (i.e. 12:00:01 excludes the first second of the minute).",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchRecentGetRequest-2"
                        },
                        {
                            "name": "since_id",
                            "description": "Returns results with a Tweet ID greater than (that is, more recent than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetsRecentSearch_type')]"
                        },
                        {
                            "name": "until_id",
                            "description": "Returns results with a Tweet ID less than (that is, older than) the specified ID.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_tweetsRecentSearch_type_1')]"
                        },
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of search results to be returned by a request.",
                            "type": "integer",
                            "defaultValue": "10",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchRecentGetRequest-3"
                        },
                        {
                            "name": "next_token",
                            "description": "This parameter is used to get the next 'page' of results. The value used with the parameter is pulled directly from the response provided by the API, and should not be modified.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2TweetsSearchRecentGetRequest-4"
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "Tweets recent search response",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "TweetSearchResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1346889436626259968\",\r\n      \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n      \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n      \"author_id\": \"2244994945\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"newest_id\": \"string\",\r\n    \"oldest_id\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdBlock')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Block User by User ID",
                "method": "POST",
                "urlTemplate": "/2/users/{id}/blocking",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to block the target user",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdBlock_type')]"
                    }
                ],
                "description": "Causes the user (in the path) to block the target user. The user (in the path) must match the user context authorizing the request",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-BlockingPostRequest",
                            "sample": "{\r\n  \"target_user_id\": \"string\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersBlockingMutationResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"blocking\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdBlocking')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Returns user objects that are blocked by provided user ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}/blocking",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user for whom to return results",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdBlocking_type')]"
                    }
                ],
                "description": "Returns a list of users that are blocked by the provided user ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-BlockingGetRequest"
                        },
                        {
                            "name": "pagination_token",
                            "description": "This value is populated by passing the 'next_token' or 'previous_token' returned in a request to paginate through results.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-BlockingGetRequest-1"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "GenericMultipleUsersLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdFollow')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Follow User",
                "method": "POST",
                "urlTemplate": "/2/users/{id}/following",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to follow the target user",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdFollow_type')]"
                    }
                ],
                "description": "Causes the user(in the path) to follow, or “request to follow” for protected users, the target user. The user(in the path) must match the user context authorizing the request",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-FollowingPostRequest",
                            "sample": "{\r\n  \"target_user_id\": \"string\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersFollowingCreateResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"following\": true,\r\n    \"pending_follow\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdFollowers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Returns user objects that follow the provided user ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}/followers",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user for whom to return results",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdFollowers_type')]"
                    }
                ],
                "description": "Returns a list of users that follow the provided user ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-FollowersGetRequest"
                        },
                        {
                            "name": "pagination_token",
                            "description": "This value is populated by passing the 'next_token' or 'previous_token' returned in a request to paginate through results.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-FollowersGetRequest-1"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "GenericMultipleUsersLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdFollowing')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Following by User ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}/following",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user for whom to return results",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdFollowing_type')]"
                    }
                ],
                "description": "Returns a list of users that are being followed by the provided user ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-FollowingGetRequest"
                        },
                        {
                            "name": "pagination_token",
                            "description": "This value is populated by passing the 'next_token' or 'previous_token' returned in a request to paginate through results.",
                            "type": "string",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-FollowingGetRequest-1"
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersFollowingLookupResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"2244994945\",\r\n      \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n      \"name\": \"Twitter Dev\",\r\n      \"username\": \"TwitterDev\",\r\n      \"protected\": false\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdLike')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Causes the user (in the path) to like the specified tweet",
                "method": "POST",
                "urlTemplate": "/2/users/{id}/likes",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to like the tweet",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdLike_type')]"
                    }
                ],
                "description": "Causes the user (in the path) to like the specified tweet. The user in the path must match the user context authorizing the request.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "UsersLikesCreateRequest",
                            "sample": "{\r\n  \"tweet_id\": \"string\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersLikesCreateResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"liked\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdLikedTweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Returns Tweet objects liked by the provided User ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}/liked_tweets",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the User to list the liked Tweets of",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdLikedTweets_type')]"
                    }
                ],
                "description": "Returns a list of Tweets liked by the provided User ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "values": []
                        },
                        {
                            "name": "pagination_token",
                            "description": "This parameter is used to get the next 'page' of results.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "2Users-id-Liked_tweetsGet200ApplicationJsonResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1346889436626259968\",\r\n      \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n      \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n      \"author_id\": \"2244994945\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdMentions')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "User mention timeline by User ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}/mentions",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the User to list mentions of",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdMentions_type')]"
                    }
                ],
                "description": "Returns Tweet objects that mention username associated to the provided User ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "since_id",
                            "description": "The minimum Tweet ID to be included in the result set. This parameter takes precedence over start_time if both are specified.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_usersIdMentions_type_1')]"
                        },
                        {
                            "name": "until_id",
                            "description": "The maximum Tweet ID to be included in the result set. This parameter takes precedence over end_time if both are specified.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_usersIdMentions_type_2')]"
                        },
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "values": []
                        },
                        {
                            "name": "pagination_token",
                            "description": "This parameter is used to get the next 'page' of results.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "start_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Tweets will be provided. The since_id parameter takes precedence if it is also specified.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "end_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets will be provided. The until_id parameter takes precedence if it is also specified.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "GenericTweetsTimelineResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1346889436626259968\",\r\n      \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n      \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n      \"author_id\": \"2244994945\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"newest_id\": \"1346889436626259968\",\r\n    \"oldest_id\": \"1346889436626259968\",\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdMute')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Mute User by User ID",
                "method": "POST",
                "urlTemplate": "/2/users/{id}/muting",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to mute the target user",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdMute_type')]"
                    }
                ],
                "description": "Causes the user (in the path) to mute the target user. The user (in the path) must match the user context authorizing the request",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "2Users-id-MutingPostRequest",
                            "sample": "{\r\n  \"target_user_id\": \"string\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersMutingMutationResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"muting\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdRetweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Causes the user (in the path) to retweet the specified tweet",
                "method": "POST",
                "urlTemplate": "/2/users/{id}/retweets",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to retweet the tweet",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdRetweets_type')]"
                    }
                ],
                "description": "Causes the user (in the path) to retweet the specified tweet. The user in the path must match the user context authorizing the request.",
                "request": {
                    "queryParameters": [],
                    "headers": [],
                    "representations": [
                        {
                            "contentType": "application/json",
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "UsersRetweetsCreateRequest",
                            "sample": "{\r\n  \"tweet_id\": \"string\"\r\n}"
                        }
                    ]
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersRetweetsCreateResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"retweeted\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdTweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "User Tweets timeline by User ID",
                "method": "GET",
                "urlTemplate": "/2/users/{id}/tweets",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the User to list Tweets of",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdTweets_type')]"
                    }
                ],
                "description": "Returns a list of Tweets authored by the provided User ID",
                "request": {
                    "queryParameters": [
                        {
                            "name": "since_id",
                            "description": "The minimum Tweet ID to be included in the result set. This parameter takes precedence over start_time if both are specified.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_usersIdTweets_type_1')]"
                        },
                        {
                            "name": "until_id",
                            "description": "The maximum Tweet ID to be included in the result set. This parameter takes precedence over end_time if both are specified.",
                            "values": [],
                            "schemaId": "61430cc24634610f20f4e968",
                            "typeName": "TweetID",
                            "type": "[parameters('operations_usersIdTweets_type_2')]"
                        },
                        {
                            "name": "max_results",
                            "description": "Format - int32. The maximum number of results",
                            "type": "integer",
                            "values": []
                        },
                        {
                            "name": "exclude",
                            "description": "The set of entities to exclude (e.g. 'replies' or 'retweets')",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "pagination_token",
                            "description": "This parameter is used to get the next 'page' of results.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "start_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The earliest UTC timestamp from which the Tweets will be provided. The since_id parameter takes precedence if it is also specified.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "end_time",
                            "description": "Format - date-time (as date-time in RFC3339). YYYY-MM-DDTHH:mm:ssZ. The latest UTC timestamp to which the Tweets will be provided. The until_id parameter takes precedence if it is also specified.",
                            "type": "string",
                            "values": []
                        },
                        {
                            "name": "expansions",
                            "description": "A comma separated list of fields to expand.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "tweet.fields",
                            "description": "A comma separated list of Tweet fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "user.fields",
                            "description": "A comma separated list of User fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "media.fields",
                            "description": "A comma separated list of Media fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "place.fields",
                            "description": "A comma separated list of Place fields to display.",
                            "type": "array",
                            "values": []
                        },
                        {
                            "name": "poll.fields",
                            "description": "A comma separated list of Poll fields to display.",
                            "type": "array",
                            "values": []
                        }
                    ],
                    "headers": [],
                    "representations": []
                },
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "GenericTweetsTimelineResponse",
                                "sample": "{\r\n  \"data\": [\r\n    {\r\n      \"id\": \"1346889436626259968\",\r\n      \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n      \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n      \"author_id\": \"2244994945\"\r\n    }\r\n  ],\r\n  \"includes\": {\r\n    \"users\": [\r\n      {\r\n        \"id\": \"2244994945\",\r\n        \"created_at\": \"2013-12-14T04:35:55+00:00\",\r\n        \"name\": \"Twitter Dev\",\r\n        \"username\": \"TwitterDev\",\r\n        \"protected\": false\r\n      }\r\n    ],\r\n    \"tweets\": [\r\n      {\r\n        \"id\": \"1346889436626259968\",\r\n        \"created_at\": \"Wed Jan 06 18:40:40 +0000 2021\",\r\n        \"text\": \"Learn how to use the user Tweet timeline and user mention timeline endpoints in the Twitter API v2 to explore Tweet\\\\u2026 https:\\\\/\\\\/t.co\\\\/56a0vZUx7i\",\r\n        \"author_id\": \"2244994945\"\r\n      }\r\n    ],\r\n    \"places\": [\r\n      {\r\n        \"id\": \"f7eb2fa2fea288b1\",\r\n        \"name\": \"Lakewood\",\r\n        \"country_code\": \"US\",\r\n        \"place_type\": \"city\",\r\n        \"full_name\": \"Lakewood, CO\",\r\n        \"country\": \"United States\",\r\n        \"contained_within\": [\r\n          \"f7eb2fa2fea288b1\"\r\n        ],\r\n        \"geo\": {\r\n          \"type\": \"Feature\",\r\n          \"bbox\": [\r\n            -105.193475,\r\n            39.60973,\r\n            -105.053164,\r\n            39.761974\r\n          ],\r\n          \"geometry\": {\r\n            \"type\": \"Point\",\r\n            \"coordinates\": [\r\n              -105.18816086351444,\r\n              40.247749999999996\r\n            ]\r\n          },\r\n          \"properties\": {}\r\n        }\r\n      }\r\n    ],\r\n    \"media\": [\r\n      {\r\n        \"type\": \"photo\",\r\n        \"media_key\": \"string\",\r\n        \"height\": 0,\r\n        \"width\": 0,\r\n        \"url\": \"string\",\r\n        \"alt_text\": \"string\"\r\n      }\r\n    ],\r\n    \"polls\": [\r\n      {\r\n        \"id\": \"1365059861688410112\",\r\n        \"options\": [\r\n          {\r\n            \"position\": 0,\r\n            \"label\": \"string\",\r\n            \"votes\": 0\r\n          }\r\n        ],\r\n        \"voting_status\": \"open\",\r\n        \"end_datetime\": \"string\",\r\n        \"duration_minutes\": 0\r\n      }\r\n    ]\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ],\r\n  \"meta\": {\r\n    \"newest_id\": \"1346889436626259968\",\r\n    \"oldest_id\": \"1346889436626259968\",\r\n    \"previous_token\": \"string\",\r\n    \"next_token\": \"string\",\r\n    \"result_count\": 0\r\n  }\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnblock')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Unblock User by User ID",
                "method": "DELETE",
                "urlTemplate": "/2/users/{source_user_id}/blocking/{target_user_id}",
                "templateParameters": [
                    {
                        "name": "source_user_id",
                        "description": "The ID of the user that is requesting to unblock the target user",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnblock_type')]"
                    },
                    {
                        "name": "target_user_id",
                        "description": "The ID of the user that the source user is requesting to unblock",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnblock_type_1')]"
                    }
                ],
                "description": "Causes the source user to unblock the target user. The source user must match the user context authorizing the request",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersBlockingMutationResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"blocking\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnfollow')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Unfollow User",
                "method": "DELETE",
                "urlTemplate": "/2/users/{source_user_id}/following/{target_user_id}",
                "templateParameters": [
                    {
                        "name": "source_user_id",
                        "description": "The ID of the user that is requesting to unfollow the target user",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnfollow_type')]"
                    },
                    {
                        "name": "target_user_id",
                        "description": "The ID of the user that the source user is requesting to unfollow",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnfollow_type_1')]"
                    }
                ],
                "description": "Causes the source user to unfollow the target user. The source user must match the user context authorizing the request",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersFollowingDeleteResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"following\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnlike')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Causes the user (in the path) to unlike the specified tweet",
                "method": "DELETE",
                "urlTemplate": "/2/users/{id}/likes/{tweet_id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to unlike the tweet",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnlike_type')]"
                    },
                    {
                        "name": "tweet_id",
                        "description": "The ID of the tweet that the user is requesting to unlike",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "TweetID",
                        "type": "[parameters('operations_usersIdUnlike_type_1')]"
                    }
                ],
                "description": "Causes the user (in the path) to unlike the specified tweet. The user must match the user context authorizing the request",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersLikesDeleteResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"liked\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnmute')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Unmute User by User ID",
                "method": "DELETE",
                "urlTemplate": "/2/users/{source_user_id}/muting/{target_user_id}",
                "templateParameters": [
                    {
                        "name": "source_user_id",
                        "description": "The ID of the user that is requesting to unmute the target user",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnmute_type')]"
                    },
                    {
                        "name": "target_user_id",
                        "description": "The ID of the user that the source user is requesting to unmute",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnmute_type_1')]"
                    }
                ],
                "description": "Causes the source user to unmute the target user. The source user must match the user context authorizing the request",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersMutingMutationResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"muting\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnretweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "displayName": "Causes the user (in the path) to unretweet the specified tweet",
                "method": "DELETE",
                "urlTemplate": "/2/users/{id}/retweets/{source_tweet_id}",
                "templateParameters": [
                    {
                        "name": "id",
                        "description": "The ID of the user that is requesting to unretweet the tweet",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "UserID",
                        "type": "[parameters('operations_usersIdUnretweets_type')]"
                    },
                    {
                        "name": "source_tweet_id",
                        "description": "The ID of the tweet that the user is requesting to unretweet",
                        "required": true,
                        "values": [],
                        "schemaId": "61430cc24634610f20f4e968",
                        "typeName": "TweetID",
                        "type": "[parameters('operations_usersIdUnretweets_type_1')]"
                    }
                ],
                "description": "Causes the user (in the path) to unretweet the specified tweet. The user must match the user context authorizing the request",
                "responses": [
                    {
                        "statusCode": 200,
                        "description": "The request was successful",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "UsersRetweetsDeleteResponse",
                                "sample": "{\r\n  \"data\": {\r\n    \"retweeted\": true\r\n  },\r\n  \"errors\": [\r\n    {\r\n      \"type\": \"about:blank\",\r\n      \"title\": \"string\",\r\n      \"detail\": \"string\",\r\n      \"status\": 0\r\n    }\r\n  ]\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 400,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    },
                    {
                        "statusCode": 500,
                        "description": "The request has failed.",
                        "representations": [
                            {
                                "contentType": "application/json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-json",
                                "sample": "{\r\n  \"code\": 0,\r\n  \"message\": \"string\"\r\n}"
                            },
                            {
                                "contentType": "application/problem+json",
                                "schemaId": "61430cc24634610f20f4e968",
                                "typeName": "HttpErrorResponseResponse-problem-json",
                                "sample": "{\r\n  \"type\": \"about:blank\",\r\n  \"title\": \"string\",\r\n  \"detail\": \"string\",\r\n  \"status\": 0\r\n}"
                            }
                        ],
                        "headers": []
                    }
                ]
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <set-header name=\"Authorization\" exists-action=\"override\">\r\n      <value>Bearer AAAAAAAAAAAAAAAAAAAAAA2bTgEAAAAAGG6hD0qo4d4DtLCVNLspzF7vgqk%3DtTRvRx7bPN37bnajdVsxRcgLJKk5pLBWsFMPDZnKU0mx1Qlovo</value>\r\n    </set-header>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/schemas",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/61430cc24634610f20f4e968')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "contentType": "application/vnd.oai.openapi.components+json",
                "document": {}
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/tagDescriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/Compliance')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "description": "Endpoints related to keeping Twitter data in your systems compliant",
                "externalDocsDescription": "Find out more",
                "externalDocsUrl": "https://developer.twitter.com/en/docs/twitter-api/compliance/batch-tweet/introduction"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/tagDescriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/General')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "description": "Miscellaneous endpoints for general API functionality",
                "externalDocsDescription": "Find out more",
                "externalDocsUrl": "https://developer.twitter.com/en/docs/twitter-api"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/tagDescriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/Lists')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "description": "Endpoints related to retrieving, managing Lists",
                "externalDocsDescription": "Find out more",
                "externalDocsUrl": "https://developer.twitter.com/en/docs/twitter-api/lists"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/tagDescriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/Spaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "description": "Endpoints related to retrieving, managing Spaces",
                "externalDocsDescription": "Find out more",
                "externalDocsUrl": "https://developer.twitter.com/en/docs/twitter-api/spaces"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/tagDescriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "description": "Endpoints related to retrieving, searching, and modifying Tweets",
                "externalDocsDescription": "Find out more",
                "externalDocsUrl": "https://developer.twitter.com/en/docs/twitter-api/tweets/lookup"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/tagDescriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "description": "Endpoints related to retrieving, managing relationships of Users",
                "externalDocsDescription": "Find out more",
                "externalDocsUrl": "https://developer.twitter.com/en/docs/twitter-api/users/lookup"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/groups/users",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/administrators/1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/groups', parameters('service_mw_apim_test_name'), 'administrators')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/groups/users",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/developers/1')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/groups', parameters('service_mw_apim_test_name'), 'developers')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/starter/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/unlimited/echo-api')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/apis",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-proxy/twitter-api-v2')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'twitter-proxy')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/starter/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-proxy/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'twitter-proxy')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/unlimited/administrators')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/starter/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/unlimited/developers')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/starter/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/groups",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/unlimited/guests')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'unlimited')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/products/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/starter/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n            IMPORTANT:\r\n            - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n            - Only the <forward-request> policy element can appear within the <backend> section element.\r\n            - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n            - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n            - To add a policy position the cursor at the desired insertion point and click on the round button associated with the policy.\r\n            - To remove a policy, delete the corresponding policy statement from the policy document.\r\n            - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n            - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n            - Policies are applied in the order of their appearance, from the top down.\r\n        -->\r\n<policies>\r\n  <inbound>\r\n    <rate-limit calls=\"5\" renewal-period=\"60\" />\r\n    <quota calls=\"100\" renewal-period=\"604800\" />\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/create-resource/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'echo-api', 'create-resource')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <json-to-xml apply=\"always\" consider-accept-header=\"false\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/retrieve-header-only/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'echo-api', 'retrieve-header-only')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <set-header name=\"X-My-Sample\" exists-action=\"override\">\r\n      <value>This is a sample</value>\r\n      <!-- for multiple headers with the same name add additional value elements -->\r\n    </set-header>\r\n    <jsonp callback-parameter-name=\"ProcessResponse\" />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/echo-api/retrieve-resource-cached/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'echo-api', 'retrieve-resource-cached')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'echo-api')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <base />\r\n    <cache-lookup vary-by-developer=\"false\" vary-by-developer-groups=\"false\">\r\n      <vary-by-header>Accept</vary-by-header>\r\n      <vary-by-header>Accept-Charset</vary-by-header>\r\n    </cache-lookup>\r\n    <rewrite-uri template=\"/resource\" />\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n    <cache-store duration=\"3600\" />\r\n  </outbound>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsRecentSearch/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetsRecentSearch')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ],
            "properties": {
                "value": "<!--\r\n    IMPORTANT:\r\n    - Policy elements can appear only within the <inbound>, <outbound>, <backend> section elements.\r\n    - To apply a policy to the incoming request (before it is forwarded to the backend service), place a corresponding policy element within the <inbound> section element.\r\n    - To apply a policy to the outgoing response (before it is sent back to the caller), place a corresponding policy element within the <outbound> section element.\r\n    - To add a policy, place the cursor at the desired insertion point and select a policy from the sidebar.\r\n    - To remove a policy, delete the corresponding policy statement from the policy document.\r\n    - Position the <base> element within a section element to inherit all policies from the corresponding section element in the enclosing scope.\r\n    - Remove the <base> element to prevent inheriting policies from the corresponding section element in the enclosing scope.\r\n    - Policies are applied in the order of their appearance, from the top down.\r\n    - Comments within policy elements are not supported and may disappear. Place your comments between policy elements or at a higher level scope.\r\n-->\r\n<policies>\r\n  <inbound>\r\n    <base />\r\n    <cors>\r\n      <allowed-origins>\r\n        <origin>*</origin>\r\n      </allowed-origins>\r\n      <allowed-methods preflight-result-max-age=\"300\">\r\n        <method>GET</method>\r\n      </allowed-methods>\r\n      <allowed-headers>\r\n        <header>*</header>\r\n      </allowed-headers>\r\n    </cors>\r\n  </inbound>\r\n  <backend>\r\n    <base />\r\n  </backend>\r\n  <outbound>\r\n    <base />\r\n  </outbound>\r\n  <on-error>\r\n    <base />\r\n  </on-error>\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/createBatchComplianceJob/Compliance')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'createBatchComplianceJob')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/getBatchComplianceJob/Compliance')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'getBatchComplianceJob')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/listBatchComplianceJobs/Compliance')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'listBatchComplianceJobs')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/getOpenApiSpec/General')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'getOpenApiSpec')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findSpaceById/Spaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findSpaceById')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findSpacesByCreatorIds/Spaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findSpacesByCreatorIds')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findSpacesByIds/Spaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findSpacesByIds')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/searchSpaces/Spaces')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'searchSpaces')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/addOrDeleteRules/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'addOrDeleteRules')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findTweetById/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findTweetById')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findTweetsById/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findTweetsById')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/getRules/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'getRules')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/hideReplyById/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'hideReplyById')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/sampleStream/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'sampleStream')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/searchStream/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'searchStream')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetCountsFullArchiveSearch/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetCountsFullArchiveSearch')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetCountsRecentSearch/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetCountsRecentSearch')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsFullarchiveSearch/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetsFullarchiveSearch')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsRecentSearch/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetsRecentSearch')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdLike/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdLike')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdLikedTweets/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdLikedTweets')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdMentions/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdMentions')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdRetweets/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdRetweets')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdTweets/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdTweets')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnlike/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdUnlike')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnretweets/Tweets')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdUnretweets')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUserById/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findUserById')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUserByUsername/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findUserByUsername')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUsersById/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findUsersById')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/findUsersByUsername/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'findUsersByUsername')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsIdLikingUsers/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetsIdLikingUsers')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/tweetsIdRetweetingUsers/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'tweetsIdRetweetingUsers')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdBlock/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdBlock')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdBlocking/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdBlocking')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdFollow/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdFollow')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdFollowers/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdFollowers')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdFollowing/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdFollowing')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdMute/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdMute')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnblock/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdUnblock')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnfollow/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdUnfollow')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/tags",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/twitter-api-v2/usersIdUnmute/Users')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('service_mw_apim_test_name'), 'twitter-api-v2', 'usersIdUnmute')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('service_mw_apim_test_name'), 'twitter-api-v2')]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]"
            ]
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/6140846ca5996c0075070001')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_mw_apim_test_name'), '1')]",
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]"
            ],
            "properties": {
                "ownerId": "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_mw_apim_test_name'), '1')]",
                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'starter')]",
                "state": "active",
                "allowTracing": true,
                "displayName": "[parameters('subscriptions_6140846ca5996c0075070001_displayName')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/6140846ca5996c0075070002')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_mw_apim_test_name'), '1')]",
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'unlimited')]"
            ],
            "properties": {
                "ownerId": "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_mw_apim_test_name'), '1')]",
                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'unlimited')]",
                "state": "active",
                "allowTracing": true,
                "displayName": "[parameters('subscriptions_6140846ca5996c0075070002_displayName')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/subscriptions",
            "apiVersion": "2021-01-01-preview",
            "name": "[concat(parameters('service_mw_apim_test_name'), '/61430fbf4634610f20f4e970')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('service_mw_apim_test_name'))]",
                "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_mw_apim_test_name'), '1')]",
                "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'twitter-proxy')]"
            ],
            "properties": {
                "ownerId": "[resourceId('Microsoft.ApiManagement/service/users', parameters('service_mw_apim_test_name'), '1')]",
                "scope": "[resourceId('Microsoft.ApiManagement/service/products', parameters('service_mw_apim_test_name'), 'twitter-proxy')]",
                "state": "active",
                "allowTracing": true,
                "displayName": "[parameters('subscriptions_61430fbf4634610f20f4e970_displayName')]"
            }
        }
    ]
}