# Build, test and deploy the T Levels Zendesk-ECRM POC
name: tl-employersupport-ecrm-poc
trigger:
- main

variables:
  - name: buildConfiguration
    value: 'Release'
  - group: tl-zd-ecrm-poc-deployment
  - group: tl-zd-ecrm-poc-vars

stages:
- stage: Build
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      vmImage: 'ubuntu-latest'

    steps:    
    - task: UseDotNet@2 
      displayName: "Install .NET Core 3.1.x SDK"
      enabled: true
      inputs:
        version: '3.1.x'
        packageType: sdk

    - task: UseDotNet@2
      displayName: 'Install .Net SDK'
      inputs:
        packageType: 'sdk'
        version: '5.0.x'

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
        noCache: true

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)  --no-restore'        

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*.[tT]ests.csproj'
        arguments: '--configuration $(buildConfiguration) --no-restore'

    - task: DotNetCoreCLI@2
      displayName: 'Publish Function App'
      enabled: true
      inputs:
        command: publish
        publishWebProjects: false
        projects: '**/*.[Ff]unctions.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/publish --no-restore'

    - task: CopyFiles@2
      displayName: 'Copy Azure deployment files to: $(build.artifactstagingdirectory)'
      inputs:
        Contents: azure/**
        TargetFolder: '$(build.artifactstagingdirectory)'
        OverWrite: true

    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
        artifactName: 'tl-emp-ecrm-poc'

- stage: Deploy
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: 'tl-poc-env'
    strategy:
      runOnce:
        deploy:
          steps:

          - task: AzureResourceGroupDeployment@2
            displayName: 'Deploy ARM templates'
            inputs:
              azureSubscription: 'ARM Subscription'
              location: $(ResourceLocation)
              resourceGroupName: '$(ResourceIdentifier)-rg'
              action: 'Create Or Update Resource Group'
              csmFile: '$(Pipeline.Workspace)/**/azure/armTemplate.json'
              overrideParameters: '-resourceIdentifier "$(ResourceIdentifier)" -resourceEnvironmentName "$(ResourceEnvironmentName)" -govNotifyApiKey "$(GovNotifyApiKey)" -supportEmailAddress "$(SupportEmailAddress)" -zendeskTicketCreatedEmailTemplateId "$(ZendeskTicketCreatedEmailTemplateId)"'
              deploymentOutputs: DeploymentOutputs

          - task: RasmusWatjen.ARMOutputParserExtension.ARMOutputConverter.ARMOutputParserExtension@1
            ##    https://marketplace.visualstudio.com/items?itemName=RasmusWatjen.ARMOutputParserExtension
            displayName: 'Parse ARM Deployment Outputs into variables'
            enabled: false
            inputs:
              armOutput: '$(DeploymentOutputs)'

          - script: echo "Pipeline.Workspace:" $(Pipeline.Workspace)
            displayName: 'Pipeline Workspace'
          - script: echo "FunctionAppName:" $(DeploymentOutputs.functionAppName.value)
            displayName: 'Function app name'

          -script:
            echo "##vso[task.setvariable variable=FUNAPPNAME]$(DeploymentOutputs.functionAppName.value)"

          - script: echo "FunctionAppName:" $(FUNAPPNAME)
            displayName: 'Function app name fixed'

          - task: AzureRmWebAppDeployment@4
            displayName: 'Deploy Function App'
            inputs:
              azureSubscription: 'ARM Subscription'
              appType: functionApp
              #WebAppName: tlzdecrmpocdev-func
              #WebAppName: $(DeploymentOutputs.functionAppName.value)
              WebAppName: $(FUNAPPNAME)
              packageForLinux: '$(Pipeline.Workspace)/**/publish/tl.employersupport.ecrm.poc.application.functions.zip'
              