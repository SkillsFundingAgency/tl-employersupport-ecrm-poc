{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "resourceEnvironmentName": {
      "type": "string",
      "metadata": {
        "description": "Environment Designation"
      }
    },
    "resourceIdentifier": {
      "type": "string",
      "metadata": {
        "description": "Resource identifier used as a prefix for all resources"
      }
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for Application Insights"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet-isolated",
      "allowedValues": [
        "node",
        "dotnet",
        "dotnet-isolated",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "govNotifyApiKey": {
      "type": "string"
    },
    "supportEmailAddress": {
      "type": "string"
    },
    "zendeskTicketCreatedEmailTemplateId": {
      "type": "string"
    },
    "zendeskAuthenticationMethod": {
      "type": "string"
    },
    "zendeskApiBaseUri": {
      "type": "string"
    },
    "zendeskApiToken": {
      "type": "string"
    },
    "zendeskUser": {
      "type": "string"
    },
    "ecrmApiBaseUri": {
      "type": "string"
    },
    "ecrmApiKey": {
      "type": "string"
    },
    "ecrmODataApiUri": {
      "type": "string"
    },
    "ecrmODataApiVersion": {
      "type": "string"
    },
    "ecrmClientId": {
      "type": "string"
    },
    "ecrmClientSecret": {
      "type": "string"
    },
    "ecrmTenant": {
      "type": "string"
    }
  },
  "variables": {
    "resourceNamePrefix": "[toLower(concat(parameters('resourceIdentifier') , parameters('resourceEnvironmentName')))]",
    "storageAccountName": "[concat(variables('resourceNamePrefix'), 'str')]",
    "functionAppName": "[concat(variables('resourceNamePrefix'), '-func')]",
    "hostingPlanName": "[concat(variables('resourceNamePrefix'), '-func')]",
    "functionWorkerRuntime": "[parameters('runtime')]",
    "applicationInsightsName": "[concat(variables('resourceNamePrefix'), '-func')]",
    "serviceBusNamespaceName": "[concat(variables('resourceNamePrefix'), '-sb-ns')]",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
    "sbVersion": "2018-01-01-preview",
    "serviceBusTicketQueueName": "ticket-queue",
    "authRuleVersion": "2017-04-01"
  },
  "resources": [
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "[variables('sbVersion')]",
      "name": "[variables('serviceBusNamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {},
      "resources": [
        {
          "type": "Queues",
          "apiVersion": "[variables('sbVersion')]",
          "name": "[variables('serviceBusTicketQueueName')]",
          "dependsOn": [
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
          ],
          "properties": {
            "lockDuration": "PT5M",
            "maxSizeInMegabytes": 1024,
            "requiresDuplicateDetection": false,
            "requiresSession": false,
            "defaultMessageTimeToLive": "P10675199DT2H48M5.4775807S",
            "deadLetteringOnMessageExpiration": false,
            "duplicateDetectionHistoryTimeWindow": "PT10M",
            "maxDeliveryCount": 10,
            "autoDeleteOnIdle": "P10675199DT2H48M5.4775807S",
            "enablePartitioning": false,
            "enableExpress": false
          }
        }
      ]
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Y1",
        "tier": "Dynamic"
      },
      "properties": {
        "name": "[variables('hostingPlanName')]",
        "computeMode": "Dynamic"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[variables('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2019-06-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[toLower(variables('functionAppName'))]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~10"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[variables('functionWorkerRuntime')]"
            },
            {
              "name": "ServiceBusConnectionString",
              "value": "[listkeys(variables('authRuleResourceId'), variables('authRuleVersion')).primaryConnectionString]"
            },
            {
              "name": "EmailConfiguration:GovNotifyApiKey",
              "value": "[parameters('govNotifyApiKey')]"
            },
            {
              "name": "EmailConfiguration:SupportEmailAddress",
              "value": "[parameters('supportEmailAddress')]"
            },
            {
              "name": "EmailConfiguration:ZendeskTicketCreatedEmailTemplateId",
              "value": "[parameters('zendeskTicketCreatedEmailTemplateId')]"
            },
            {
              "name": "ZendeskConfiguration:AuthenticationMethod",
              "value": "[parameters('zendeskAuthenticationMethod')]"
            },
            {
              "name": "ZendeskConfiguration:ApiBaseUri",
              "value": "[parameters('zendeskApiBaseUri')]"
            },
            {
              "name": "ZendeskConfiguration:ApiToken",
              "value": "[parameters('zendeskApiToken')]"
            },
            {
              "name": "ZendeskConfiguration:User",
              "value": "[parameters('zendeskUser')]"
            },
            {
              "name": "EcrmConfiguration:ApiBaseUri",
              "value": "[parameters('ecrmApiBaseUri')]"
            },
            {
              "name": "EcrmConfiguration:ApiKey",
              "value": "[parameters('ecrmApiKey')]"
            },
            {
              "name": "EcrmConfiguration:EcrmODataApiUri",
              "value": "[parameters('ecrmODataApiVersion')]"
            },
            {
              "name": "EcrmConfiguration:EcrmODataApiVersion",
              "value": "[parameters('ecrmODataApiVersion')]"
            },
            {
              "name": "EcrmConfiguration:EcrmClientId",
              "value": "[parameters('ecrmClientId')]"
            },
            {
              "name": "EcrmConfiguration:EcrmClientSecret",
              "value": "[parameters('ecrmClientSecret')]"
            },
            {
              "name": "EcrmConfiguration:EcrmTenant",
              "value": "[parameters('ecrmTenant')]"
            },
            {
              "name": "EcrmConfiguration:",
              "value": "[parameters('')]"
            }
          ]
        }
      }
    },
    {
      "type": "microsoft.insights/components",
      "apiVersion": "2020-02-02-preview",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('appInsightsLocation')]",
      "tags": {
        "[concat('hidden-link:', resourceId('Microsoft.Web/sites', variables('applicationInsightsName')))]": "Resource"
      },
      "properties": {
        "ApplicationId": "[variables('applicationInsightsName')]",
        "Request_Source": "IbizaWebAppExtensionCreate"
      }
    }
  ],
  "outputs": {
    "FunctionAppName": {
      "type": "string",
      "value": "[variables('functionAppName')]"
    },
    "ServiceBusNamespaceName": {
      "type": "string",
      "value": "[variables('serviceBusNamespaceName')]"
    },
    "ServiceBusConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('authRuleVersion')).primaryConnectionString]"
    }
  }
}